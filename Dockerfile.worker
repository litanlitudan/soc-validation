# Dockerfile for Prefect Worker - Distributed Test Executor

FROM public.ecr.aws/docker/library/python:3.12-slim

# Set working directory
WORKDIR /app

# Install system dependencies for hardware communication
RUN apt-get update && apt-get install -y \
    curl \
    git \
    gcc \
    g++ \
    make \
    telnet \
    openssh-client \
    sshpass \
    iputils-ping \
    net-tools \
    ipmitool \
    snmp \
    snmp-mibs-downloader \
    minicom \
    screen \
    socat \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements
COPY requirements.txt /app/requirements.txt

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Install additional dependencies for worker
RUN pip install --no-cache-dir \
    prefect-shell \
    prefect-docker \
    prefect-kubernetes

# Set Python path
ENV PYTHONPATH=/app:$PYTHONPATH
ENV PYTHONUNBUFFERED=1

# Copy application code
COPY src/ /app/src/
COPY scripts/ /app/scripts/

# Make scripts executable
RUN chmod +x /app/scripts/*.sh 2>/dev/null || true

# Create necessary directories
RUN mkdir -p /data/artifacts /data/tests /app/logs

# Set worker environment
ENV PREFECT_LOGGING_LEVEL=INFO
ENV WORKER_TYPE=process
ENV WORKER_PREFETCH_SECONDS=10
ENV WORKER_HEARTBEAT_INTERVAL=30

# Health check (checks if worker can reach Prefect API)
HEALTHCHECK --interval=60s --timeout=10s --start-period=30s --retries=3 \
    CMD python -c "import httpx; httpx.get('${PREFECT_API_URL:-http://prefect:4200}/api/health')" || exit 1

# Run Prefect worker
CMD ["python", "-m", "prefect", "worker", "start", \
     "--pool", "${WORKER_POOL_NAME:-default}", \
     "--name", "${WORKER_ID:-worker-local}", \
     "--limit", "${WORKER_CONCURRENCY:-4}"]